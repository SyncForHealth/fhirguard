name: FHIRGuard Release
on:
  release:
    types: [published]

jobs:
  release-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install and configure poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      
      - name: Load cached dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies and project
        run: poetry install --no-interaction
      
      - name: Run linting
        run: poetry run ruff check --output-format=concise

      - name: Run tests
        run: poetry run pytest --cov=fhirguard --cov=fhirguard_core --cov=fhirguard_cli --cov-report term-missing
      
      - name: Set version
        run: poetry version -- $(echo $GITHUB_REF | cut -d '/' -f 3)

      - name: Package application
        run: poetry build
      
      - name: Upload release dists
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs: [release-build]
    permissions:
      id-token: write
    
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish FHIRGuard package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1